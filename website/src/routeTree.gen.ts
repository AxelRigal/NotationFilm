/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as FilmIndexRouteImport } from './routes/film/index'
import { Route as AjoutFilmIndexRouteImport } from './routes/ajoutFilm/index'
import { Route as FilmIdRouteImport } from './routes/film/$id'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const FilmIndexRoute = FilmIndexRouteImport.update({
  id: '/film/',
  path: '/film/',
  getParentRoute: () => rootRouteImport,
} as any)
const AjoutFilmIndexRoute = AjoutFilmIndexRouteImport.update({
  id: '/ajoutFilm/',
  path: '/ajoutFilm/',
  getParentRoute: () => rootRouteImport,
} as any)
const FilmIdRoute = FilmIdRouteImport.update({
  id: '/film/$id',
  path: '/film/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/film/$id': typeof FilmIdRoute
  '/ajoutFilm': typeof AjoutFilmIndexRoute
  '/film': typeof FilmIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/film/$id': typeof FilmIdRoute
  '/ajoutFilm': typeof AjoutFilmIndexRoute
  '/film': typeof FilmIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/film/$id': typeof FilmIdRoute
  '/ajoutFilm/': typeof AjoutFilmIndexRoute
  '/film/': typeof FilmIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/film/$id' | '/ajoutFilm' | '/film'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/film/$id' | '/ajoutFilm' | '/film'
  id: '__root__' | '/' | '/film/$id' | '/ajoutFilm/' | '/film/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FilmIdRoute: typeof FilmIdRoute
  AjoutFilmIndexRoute: typeof AjoutFilmIndexRoute
  FilmIndexRoute: typeof FilmIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/film/': {
      id: '/film/'
      path: '/film'
      fullPath: '/film'
      preLoaderRoute: typeof FilmIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ajoutFilm/': {
      id: '/ajoutFilm/'
      path: '/ajoutFilm'
      fullPath: '/ajoutFilm'
      preLoaderRoute: typeof AjoutFilmIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/film/$id': {
      id: '/film/$id'
      path: '/film/$id'
      fullPath: '/film/$id'
      preLoaderRoute: typeof FilmIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FilmIdRoute: FilmIdRoute,
  AjoutFilmIndexRoute: AjoutFilmIndexRoute,
  FilmIndexRoute: FilmIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
